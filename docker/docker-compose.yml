version: '3.8'
services:

  # airで動かしているホットリロードに対応したコンテナ
  pocgo:
    build:
      context: .. # ルートディレクトリを指定
      dockerfile: docker/Dockerfile.local # ルートディレクトリから見たDockerfile.localのパス
    container_name: pocgo_app
    image: pocgo_app:latest
    volumes:
      - ..:/app # ルートディレクトリをマウント
    ports:
      - '8080:8080'
    environment:
      - APP_PORT=8080
      - USE_INMEMORY=false
      - POSTGRES_HOST=postgres
      - POSTGRES_DBNAME=POCGO_LOCAL_DB
      - POSTGRES_USER=local_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_PORT=5432
      - POSTGRES_SSLMODE=disable
      - JWT_SECRET_KEY=jwt_secret_key
    depends_on:
      - postgres
    networks:
      - default
    command: ["air", "-c", ".air.toml"]

  # delveでデバッグに対応したコンテナ。デバッガをアタッチした後、port 8081でアクセスできる。
  delve:
    build:
      context: ..
      dockerfile: docker/Dockerfile.local
    container_name: pocgo_delve
    image: pocgo_app:latest
    volumes:
      - ..:/app
    ports:
      - '8081:8080'
      - '2345:2345'
    environment:
      - APP_PORT=8080
      - USE_INMEMORY=false
      - POSTGRES_HOST=postgres
      - POSTGRES_DBNAME=POCGO_LOCAL_DB
      - POSTGRES_USER=local_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_PORT=5432
      - POSTGRES_SSLMODE=disable
      - JWT_SECRET_KEY=jwt_secret_key
    depends_on:
      - postgres
    networks:
      - default
    command: ["dlv", "debug", "--headless", "--listen=:2345", "--api-version=2", "--accept-multiclient", "--log", "./cmd/pocgo"]

  postgres:
    container_name: pocgo_postgres
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: local_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: POCGO_LOCAL_DB
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: 'Asia/Tokyo'
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U local_user"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  default:
    driver: bridge
