// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/user/user_service.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	user "github.com/u104rak1/pocgo/internal/domain/user"
)

// MockIUserService is a mock of IUserService interface.
type MockIUserService struct {
	ctrl     *gomock.Controller
	recorder *MockIUserServiceMockRecorder
}

// MockIUserServiceMockRecorder is the mock recorder for MockIUserService.
type MockIUserServiceMockRecorder struct {
	mock *MockIUserService
}

// NewMockIUserService creates a new mock instance.
func NewMockIUserService(ctrl *gomock.Controller) *MockIUserService {
	mock := &MockIUserService{ctrl: ctrl}
	mock.recorder = &MockIUserServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUserService) EXPECT() *MockIUserServiceMockRecorder {
	return m.recorder
}

// EnsureUserExists mocks base method.
func (m *MockIUserService) EnsureUserExists(ctx context.Context, id user.UserID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureUserExists", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// EnsureUserExists indicates an expected call of EnsureUserExists.
func (mr *MockIUserServiceMockRecorder) EnsureUserExists(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureUserExists", reflect.TypeOf((*MockIUserService)(nil).EnsureUserExists), ctx, id)
}

// VerifyEmailUniqueness mocks base method.
func (m *MockIUserService) VerifyEmailUniqueness(ctx context.Context, email string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyEmailUniqueness", ctx, email)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyEmailUniqueness indicates an expected call of VerifyEmailUniqueness.
func (mr *MockIUserServiceMockRecorder) VerifyEmailUniqueness(ctx, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyEmailUniqueness", reflect.TypeOf((*MockIUserService)(nil).VerifyEmailUniqueness), ctx, email)
}
