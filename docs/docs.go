// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This endpoint returns the profile of the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Read My Profile",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/me.ReadMyProfileResponseBody"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/me/accounts": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "This endpoint creates a new account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account API"
                ],
                "summary": "Create Account",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/accounts.CreateAccountRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/accounts.CreateAccountResponseBody"
                        }
                    },
                    "400": {
                        "description": "Validation Failed or Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ValidationErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/signin": {
            "post": {
                "description": "This endpoint authenticates the user using their email and password, and issues an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication API"
                ],
                "summary": "Signin",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/signin.SigninRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/signin.SigninResponseBody"
                        }
                    },
                    "400": {
                        "description": "Validation Failed or Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ValidationErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/signup": {
            "post": {
                "description": "This endpoint creates a new user and account, and issues an access token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication API"
                ],
                "summary": "Signup",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/signup.SignupRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/signup.SignupResponseBody"
                        }
                    },
                    "400": {
                        "description": "Validation Failed or Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ValidationErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "accounts.CreateAccountRequestBody": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "example": "JPY"
                },
                "name": {
                    "type": "string",
                    "example": "For work"
                },
                "password": {
                    "type": "string",
                    "example": "1234"
                }
            }
        },
        "accounts.CreateAccountResponseBody": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 0
                },
                "currency": {
                    "type": "string",
                    "example": "JPY"
                },
                "id": {
                    "type": "string",
                    "example": "01J9R7YPV1FH1V0PPKVSB5C7LE"
                },
                "name": {
                    "type": "string",
                    "example": "For work"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                }
            }
        },
        "me.ReadMyProfileResponseBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "sato@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "01J9R7YPV1FH1V0PPKVSB5C8FW"
                },
                "name": {
                    "type": "string",
                    "example": "Sato Taro"
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "error message"
                },
                "reason": {
                    "type": "string",
                    "example": "error reason"
                }
            }
        },
        "response.ValidationError": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string",
                    "example": "field name"
                },
                "message": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "response.ValidationErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.ValidationError"
                    }
                },
                "reason": {
                    "type": "string",
                    "example": "ErrorReason"
                }
            }
        },
        "signin.SigninRequestBody": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "sato@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "signin.SigninResponseBody": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "eyJhb..."
                }
            }
        },
        "signup.SignupRequestBody": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/signup.SignupRequestBodyUser"
                }
            }
        },
        "signup.SignupRequestBodyAccount": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "example": "JPY"
                },
                "name": {
                    "type": "string",
                    "example": "For work"
                },
                "password": {
                    "type": "string",
                    "example": "1234"
                }
            }
        },
        "signup.SignupRequestBodyUser": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/signup.SignupRequestBodyAccount"
                },
                "email": {
                    "type": "string",
                    "example": "sato@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "Sato Taro"
                },
                "password": {
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "signup.SignupResponseBody": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "eyJhb..."
                },
                "user": {
                    "$ref": "#/definitions/signup.SignupResponseBodyUser"
                }
            }
        },
        "signup.SignupResponseBodyAccount": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 0
                },
                "currency": {
                    "type": "string",
                    "example": "JPY"
                },
                "id": {
                    "type": "string",
                    "example": "01J9R7YPV1FH1V0PPKVSB5C7LE"
                },
                "name": {
                    "type": "string",
                    "example": "For work"
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2021-08-01T00:00:00Z"
                }
            }
        },
        "signup.SignupResponseBodyUser": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/signup.SignupResponseBodyAccount"
                },
                "email": {
                    "type": "string",
                    "example": "sato@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "01J9R7YPV1FH1V0PPKVSB5C8FW"
                },
                "name": {
                    "type": "string",
                    "example": "Sato Taro"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "pocgo API",
	Description:      "This is a sample server. Please enter your token in the format: \"Bearer <token>\" in the Authorization header.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
