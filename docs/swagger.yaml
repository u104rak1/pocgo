definitions:
  accounts.CreateAccountRequestBody:
    properties:
      currency:
        description: The currency for the account. Supported values are JPY or USD.
        example: JPY
        type: string
      name:
        description: The name of the account. Must be 3-20 characters long.
        example: For work
        type: string
      password:
        description: A 4-digit password for securing the account.
        example: "1234"
        type: string
    type: object
  accounts.CreateAccountResponse:
    properties:
      balance:
        description: The current balance of the account.
        example: 0
        type: number
      currency:
        description: The currency for the account.
        example: JPY
        type: string
      id:
        description: The ID of the account.
        example: 01J9R7YPV1FH1V0PPKVSB5C7LE
        type: string
      name:
        description: The name of the account.
        example: For work
        type: string
      updatedAt:
        description: The date and time the account was last updated.
        example: "2021-08-01T00:00:00Z"
        type: string
    type: object
  me.ReadMyProfileResponse:
    properties:
      email:
        example: sato@example.com
        type: string
      id:
        example: 01J9R7YPV1FH1V0PPKVSB5C8FW
        type: string
      name:
        example: Sato Taro
        type: string
    type: object
  response.ProblemDetail:
    properties:
      detail:
        example: Error detail message
        type: string
      instance:
        example: /path/to/resource
        type: string
      status:
        example: 400
        type: integer
      title:
        example: Error title
        type: string
      type:
        example: https://example.com/probs/error-title
        type: string
    type: object
  response.ValidationError:
    properties:
      field:
        example: field name
        type: string
      message:
        example: error message
        type: string
    type: object
  response.ValidationProblemDetail:
    properties:
      detail:
        example: Error detail message
        type: string
      errors:
        items:
          $ref: '#/definitions/response.ValidationError'
        type: array
      instance:
        example: /path/to/resource
        type: string
      status:
        example: 400
        type: integer
      title:
        example: Error title
        type: string
      type:
        example: https://example.com/probs/error-title
        type: string
    type: object
  signin.SigninRequest:
    properties:
      email:
        description: The email address of the user, used for login.
        example: sato@example.com
        type: string
      password:
        description: The password associated with the email address, required for
          login. Must be 8-20 characters long.
        example: password
        type: string
    type: object
  signin.SigninResponse:
    properties:
      accessToken:
        example: eyJhb...
        type: string
    type: object
  signup.SignupRequest:
    properties:
      email:
        description: The email address of the user, used for login.
        example: sato@example.com
        type: string
      name:
        description: The name of the user. Must be 3-20 characters long.
        example: Sato Taro
        type: string
      password:
        description: The password associated with the email address, required for
          login. Must be 8-20 characters long.
        example: password
        type: string
    type: object
  signup.SignupResponse:
    properties:
      accessToken:
        example: eyJhb...
        type: string
      user:
        $ref: '#/definitions/signup.SignupResponseBodyUser'
    type: object
  signup.SignupResponseBodyUser:
    properties:
      email:
        example: sato@example.com
        type: string
      id:
        example: 01J9R7YPV1FH1V0PPKVSB5C8FW
        type: string
      name:
        example: Sato Taro
        type: string
    type: object
  transactions.ExecuteTransactionRequestBody:
    properties:
      amount:
        description: The transaction amount.
        example: 1000
        type: number
      currency:
        description: The currency of the transaction. Supported values are JPY and
          USD.
        example: JPY
        type: string
      operationType:
        description: Specifies the type of transaction. Valid values are DEPOSIT,
          WITHDRAW, or TRANSFER.
        example: DEPOSIT
        type: string
      password:
        description: The account password.
        example: "1234"
        type: string
      receiverAccountId:
        description: Required for TRANSFER operations. Represents the recipient account
          ID.
        example: 01J9R8AJ1Q2YDH1X9836GS9D87
        type: string
    type: object
  transactions.ExecuteTransactionResponse:
    properties:
      accountId:
        example: 01J9R7YPV1FH1V0PPKVSB5C8FW
        type: string
      amount:
        example: 1000
        type: number
      currency:
        example: JPY
        type: string
      id:
        example: 01J9R8AJ1Q2YDH1X9836GS9E89
        type: string
      operationType:
        example: DEPOSIT
        type: string
      receiverAccountId:
        example: 01J9R8AJ1Q2YDH1X9836GS9D87
        type: string
      transactionAt:
        example: "2024-03-20T15:00:00Z"
        type: string
    type: object
  transactions.ListTransactionsResponse:
    properties:
      total:
        example: 1
        type: integer
      transactions:
        items:
          $ref: '#/definitions/transactions.ListTransactionsTransaction'
        type: array
    type: object
  transactions.ListTransactionsTransaction:
    properties:
      accountId:
        example: 01J9R7YPV1FH1V0PPKVSB5C8FW
        type: string
      amount:
        example: 1000
        type: number
      currency:
        example: JPY
        type: string
      id:
        example: 01J9R8AJ1Q2YDH1X9836GS9E89
        type: string
      operationType:
        example: DEPOSIT
        type: string
      receiverAccountId:
        example: 01J9R8AJ1Q2YDH1X9836GS9D87
        type: string
      transactionAt:
        example: "2024-03-20T15:00:00Z"
        type: string
    type: object
info:
  contact: {}
  description: 'This is a sample server. Please enter your token in the format: "Bearer
    <token>" in the Authorization header.'
  title: pocgo API
  version: "1.0"
paths:
  /api/v1/me:
    get:
      consumes:
      - application/json
      description: This endpoint returns the profile of the authenticated user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/me.ReadMyProfileResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ProblemDetail'
      security:
      - BearerAuth: []
      summary: Read My Profile
      tags:
      - User API
  /api/v1/me/accounts:
    post:
      consumes:
      - application/json
      description: This endpoint creates a new account.
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/accounts.CreateAccountRequestBody'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/accounts.CreateAccountResponse'
        "400":
          description: Validation Failed or Bad Request
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ProblemDetail'
      security:
      - BearerAuth: []
      summary: Create Account
      tags:
      - Account API
  /api/v1/me/accounts/{account_id}/transactions:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves the transaction history of the specified
        account.
      parameters:
      - description: Account ID to be operated.
        in: path
        name: account_id
        required: true
        type: string
      - description: 'The start date for filtering transactions (format: YYYYMMDD).'
        in: query
        name: from
        type: string
      - description: 'The end date for filtering transactions (format: YYYYMMDD).'
        in: query
        name: to
        type: string
      - description: Comma-separated transaction types to filter by. Valid values
          are DEPOSIT, WITHDRAW, and TRANSFER. If not specified, all transaction types
          are included.
        in: query
        name: operationTypes
        type: string
      - description: The sorting order of transactions based on transactionAt. Valid
          values are ASC or DESC. Defaults to DESC.
        in: query
        name: sort
        type: string
      - description: The maximum number of transaction histories per page. Can be
          specified between 1 and 100.
        in: query
        name: limit
        type: integer
      - description: The page number for paginated results.
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ListTransactionsResponse'
        "400":
          description: Validation Failed or Bad Request
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ProblemDetail'
      security:
      - BearerAuth: []
      summary: List Transactions
      tags:
      - Transaction API
    post:
      consumes:
      - application/json
      description: This endpoint executes a transaction (deposit, withdraw, or transfer)
        for the specified account.
      parameters:
      - description: Account ID to be operated.
        in: path
        name: account_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/transactions.ExecuteTransactionRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transactions.ExecuteTransactionResponse'
        "400":
          description: Validation Failed or Bad Request
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ProblemDetail'
      security:
      - BearerAuth: []
      summary: Execute Transaction
      tags:
      - Transaction API
  /api/v1/signin:
    post:
      consumes:
      - application/json
      description: This endpoint authenticates the user using their email and password,
        and issues an access token.
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/signin.SigninRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/signin.SigninResponse'
        "400":
          description: Validation Failed or Bad Request
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ProblemDetail'
      summary: Signin
      tags:
      - Authentication API
  /api/v1/signup:
    post:
      consumes:
      - application/json
      description: This endpoint creates a new user and issues an access token.
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/signup.SignupRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/signup.SignupResponse'
        "400":
          description: Validation Failed or Bad Request
          schema:
            $ref: '#/definitions/response.ValidationProblemDetail'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.ProblemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ProblemDetail'
      summary: Signup
      tags:
      - Authentication API
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
